// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                     Int       @id @default(autoincrement())
  username               String?
  normalized_username    String?
  email                  String?   @unique
  password               String
  email_confirmed        Boolean?  @default(false)
  security_stamp         String?
  concurrency_stamp      String
  phone_number           String?   @unique
  phone_number_confirmed Boolean?
  lockout_end            DateTime?
  two_factor_enabled     Boolean?  @default(false)
  lockout_enabled        Boolean?
  access_failed_count    Int       @default(0)
  first_login            Boolean?
  code                   Int
  role                   role?     @relation(fields: [roleId], references: [id])
  roleId                 Int?
  deleted_status         Int       @default(0)
}

model privilege {
  id                Int     @id @default(autoincrement())
  action            String  @unique
  description       String?
  concurrency_stamp String  @default("random")
  roles             role[]  @relation(references: [id])
  deleted_status    Int     @default(0)
}

model role {
  id                Int         @id @default(autoincrement())
  name              String      @unique
  concurrency_stamp String
  description       String?
  privileges        privilege[] @relation(references: [id])
  users             user[]
  deleted_status    Int         @default(0)
}

model Client {
  id                 Int      @id @default(autoincrement())
  name               String
  tradeName          String   @unique
  address            String
  city               String?
  tel                String   @unique
  tinNumber          String   @unique
  subCity            String?
  woreda             String?
  contactPersonName  String
  contactPersonPhone String   @unique
  contactPersonEmail String   @unique
  email              String   @unique
  startDate          DateTime
  endDate            DateTime
  creationDate       DateTime @default(now())
  createdBy          String
  revisionDate       DateTime @updatedAt
  revisedBy          String
  status             Int      @default(0)
  isProtectedForEdit Boolean  @default(false)

  @@map(name: "client")
}

model equipment {
  id                 Int      @id @default(autoincrement())
  name               String   @unique
  description        String?
  startDate          DateTime
  endDate            DateTime
  creationDate       DateTime @default(now())
  createdBy          String
  revisionDate       DateTime @updatedAt
  revisedBy          String
  status             Int      @default(0)
  isProtectedForEdit Boolean  @default(false)
}

model evaluation {
  id                 Int      @id @default(autoincrement())
  name               String   @unique
  description        String?
  startDate          DateTime
  endDate            DateTime
  creationDate       DateTime @default(now())
  createdBy          String
  revisionDate       DateTime @updatedAt
  revisedBy          String
  status             Int      @default(0)
  isProtectedForEdit Boolean  @default(false)
}

model instruction {
  id                 Int      @id @default(autoincrement())
  name               String   @unique
  description        String?
  startDate          DateTime
  endDate            DateTime
  creationDate       DateTime @default(now())
  createdBy          String
  revisionDate       DateTime @updatedAt
  revisedBy          String
  status             Int      @default(0)
  isProtectedForEdit Boolean  @default(false)
}

model manpower {
  id                 Int      @id @default(autoincrement())
  name               String   @unique
  description        String?
  startDate          DateTime
  endDate            DateTime
  creationDate       DateTime @default(now())
  createdBy          String
  revisionDate       DateTime @updatedAt
  revisedBy          String
  status             Int      @default(0)
  isProtectedForEdit Boolean  @default(false)
}

model material_category {
  id                 Int        @id @default(autoincrement())
  name               String     @unique
  description        String?
  materials          material[]
  startDate          DateTime
  endDate            DateTime
  creationDate       DateTime   @default(now())
  createdBy          String
  revisionDate       DateTime   @updatedAt
  revisedBy          String
  status             Int        @default(0)
  isProtectedForEdit Boolean    @default(false)
}

model material {
  id                   Int               @id @default(autoincrement())
  name                 String            @unique
  description          String?
  unit                 String
  material_category    material_category @relation(fields: [material_category_id], references: [id])
  material_category_id Int
  startDate            DateTime
  endDate              DateTime
  creationDate         DateTime          @default(now())
  createdBy            String
  revisionDate         DateTime          @updatedAt
  revisedBy            String
  status               Int               @default(0)
  isProtectedForEdit   Boolean           @default(false)
}

model phase {
  id                 Int      @id @default(autoincrement())
  name               String   @unique
  description        String?
  startDate          DateTime
  endDate            DateTime
  creationDate       DateTime @default(now())
  createdBy          String
  revisionDate       DateTime @updatedAt
  revisedBy          String
  status             Int      @default(0)
  isProtectedForEdit Boolean  @default(false)
}

model priority {
  id                 Int      @id @default(autoincrement())
  name               String   @unique
  description        String?
  startDate          DateTime
  endDate            DateTime
  creationDate       DateTime @default(now())
  createdBy          String
  revisionDate       DateTime @updatedAt
  revisedBy          String
  status             Int      @default(0)
  isProtectedForEdit Boolean  @default(false)
}

model category {
  id                 Int      @id @default(autoincrement())
  name               String   @unique
  description        String?
  startDate          DateTime
  endDate            DateTime
  creationDate       DateTime @default(now())
  createdBy          String
  revisionDate       DateTime @updatedAt
  revisedBy          String
  status             Int      @default(0)
  isProtectedForEdit Boolean  @default(false)
}
